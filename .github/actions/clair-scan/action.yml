name: clair-scan
description: 'run clair scan against docker image'
inputs:
  github_pass:
    description: 'github token'
    required: true
  image_name:
    description: 'name of the image'
    required: true
  image_tag:
    description: 'tag of the image'
    required: true
  clair_url:
    description: 'url to download clair-scan'
    default: 'https://github.com/arminc/clair-scanner/releases/download/v12/clair-scanner_linux_amd64'
  reg_url:
    description: 'registry url'
    default: 'ghcr.io'


runs:
  using: composite
  steps:
    
    - name: check input
      shell: bash
      run: |
        echo ${{ inputs.github_pass }}
        echo ${{ inputs.image_name }}
        echo ${{ inputs.image_tag }}
        echo ${{ inputs.clair_url }}

           
    - name: login to docker
      uses: bruce1237/github-workflow-center/.github/actions/docker-login@main
      with:
        github_token: ${{ inputs.github_token }}

    - name: dash branch name
      uses: bruce1237/github-workflow-center/.github/actions/dash-branch-name@main

    - name: check image before pull
      shell: bash
      run: docker images

    - name: pull image
      shell: bash
      run: docker pull ${{ inputs.reg_url }}/${{ inputs.image_name }}:${{ inputs.image_tag }}

    - name: check image after pull
      shell: bash
      run: docker images

    - name: get chair-scan
      shell: bash
      run: wget ${{ inputs.clair_url }}
    
    - name: chmod
      shell: bash
      run: |
        mv clair-scanner_linux_amd64 clair-scanner
        chmod +x clair-scanner
        touch clair-whitelist.yml

    - name: run clair docker
      shell: bash
      run: |
        docker run -p 5432:5432 -d --name db arminc/clair-db:latest
        docker run -p 6060:6060 --link db:postgres -d --name clair arminc/clair-local-scan:latest

    - name: check file and docker 
      shell: bash
      run: |
        ls -lah
        docker images
        docker ps

    
    - name: scan
      shell: bash
      id: clair-scan
      continue-on-error: true
      run: ./clair-scanner --ip $(hostname -i) -r scan-report.json -l scan.log -w clair-whitelist.yml ${{ inputs.reg_url }}/${{ inputs.image_name }}:${{ inputs.image_tag }}

    